class ContentNode {
    field String name, address, val, lvl, status1, status2, r1, r2, r3, a1;
    field int items, ramNum;
    // field String effect0, effect1;
    field Array arrContent;
    static String tName, tAddr, tVal, tLVL, tStatus, tRAM;
    static int baseRow, baseCol;
    static Array arrFixedTitleContent;
    
    function void init() {
        let baseRow = 5;
        let baseCol = 45;
        
        let tName = "Name:    ";
        let tAddr = "Address: ";
        let tVal  = "Value:   ";
        let tLVL  = "Level:   ";
        let tRAM = "RAM";
        let tStatus = "";

        let arrFixedTitleContent = Array.new(8);
        let arrFixedTitleContent[0] = tName;
        let arrFixedTitleContent[1] = tAddr;
        let arrFixedTitleContent[2] = tVal;
        let arrFixedTitleContent[3] = tLVL;
        let arrFixedTitleContent[4] = tStatus;

        let arrFixedTitleContent[5] = tRAM;
        let arrFixedTitleContent[6] = tRAM;
        let arrFixedTitleContent[7] = tRAM;

        return;
    }

    method void draw() {
        var int i;
        let i = 0;
        while ((i < items) & (items > 1)) {

            if ((i = (items - ramNum - 1)) | (i = (items - ramNum))) {
                let baseRow = baseRow + 1;
            }
            do Output.moveCursor(baseRow + i, baseCol);

            do Output.printString(arrFixedTitleContent[i]);
            do Output.printString(arrContent[i]);
            let i = i + 1;
        }

        do UserInterface.printAlignedTitle(arrContent[0]);  // Name
        let baseRow = 5;  // Reset

        return;
    }

    method void assignToArr() {

        let arrContent = Array.new(8);

        let arrContent[0] = name;
        let arrContent[1] = address;
        let arrContent[2] = val;
        let arrContent[3] = lvl;

        let arrContent[4] = status1;

        let arrContent[5] = r1;
        let arrContent[6] = r2;
        let arrContent[7] = r3;

        return;
    }
    
    method void reveal() {
        let arrContent[2] = a1;
        do Output.moveCursor(baseRow + 2, baseCol);
        do Output.printString(arrFixedTitleContent[2]);
        do Output.printString(arrContent[2]);
        
        let arrContent[4] = status2;
        do Output.moveCursor(baseRow + 5, baseCol);
        do Output.printString(arrFixedTitleContent[4]);
        do Output.printString(arrContent[4]);

        return;
    }

    method void dispose() {

        do name.dispose();
        do address.dispose();
        do val.dispose();
        do lvl.dispose();
        do status1.dispose();
        do status2.dispose();

        do r1.dispose();
        do r2.dispose();
        do r3.dispose();

        do a1.dispose();

        do arrContent.dispose();

        do Memory.deAlloc(this);
        return;
    }

    constructor ContentNode makeBlank() {
        let name = "";
        let address = "";
        let val = "";
        let lvl = "";

        let status1 = "";
        let status2 = "";

        let r1 = "";
        let r2 = "";
        let r3 = "";

        let a1 = "";

        let ramNum = 0;
        let items = 0;

        do assignToArr();

        return this;
    }
    constructor ContentNode makeShimon() {
        let name = "SHIMON";
        let address = "555";
        let val = "42";
        let lvl = "32768";

        let status1 = "Master of Memory";
        let status2 = "";

        let r1 = "";
        let r2 = "";
        let r3 = "";

        let a1 = "";

        let ramNum = 0;
        let items = 5;
        
        do assignToArr();

        return this;
    }

    constructor ContentNode make357() {
        let name = "GNIRUT";
        let address = "357";
        let val = "?";
        let lvl = "3";
        
        let status1 = "OPS I SEG FAULT";
        let status2 = "OPS I DID IT AGAIN";

        let r1 = "[3] = 5";
        let r2 = "[5] = 7";
        let r3 = "[7] = 3";

        let a1 = "21";

        let ramNum = 3;
        let items = 8;

        do assignToArr();

        return this;
    }


}
