class ChallengeNode {

    field int linesNum, answersNum, nodeIndex, currentRow, numLines, queries;
    field String t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
    field String a0, a1, a2;
    field String r0, r1, r2;
    field Array content, answers, registers;

    static int startRowCode, startCol, startRowReg; 
    static String lineIndex;

    function void init() {
        let startRowCode = 5;
        let startCol = 3;
        let startRowReg = 18;
        let lineIndex = String.new(3);
        return;
    }

    method void draw() {
        
        // do UserInterface.clearChallengeCode();  // Ok something 
        // do UserInterface.clearChallengeAnswer();  // here is wrong

        while (~(currentRow = numLines)) {
            do UserInterface.clearDialogueBox();
            do ChallengeNode.drawLineIndex(currentRow);

            do Output.moveCursor(startRowCode + currentRow, startCol);
            do Output.printString(content[currentRow]);

            let currentRow = currentRow + 1;
        }
        let currentRow = 0;

        do Output.moveCursor(startRowReg, 1);
        do Output.printString(registers[0]);
        do Output.moveCursor(startRowReg + 1, 1);
        do Output.printString(registers[1]);
        do Output.moveCursor(startRowReg + 2, 1);
        do Output.printString(registers[2]);
        return;
    }

    function void drawLineIndex(int aCurrentRow) {
        if (~(aCurrentRow > 9)) {
            do Output.moveCursor(startRowCode + aCurrentRow, startCol - 2);
        }
        else {
            do Output.moveCursor(startRowCode + aCurrentRow, startCol - 3);
        }

        let lineIndex = String.new(4);
        do lineIndex.setInt(aCurrentRow);
        do lineIndex.appendChar(46);
        do Output.printString(lineIndex);
        do lineIndex.dispose();
        
        return;
    }

    method void assignContentToArr() {
        
        let currentRow = 0;
        let content = Array.new(12);

        let content[0] = t0;
        let content[1] = t1;
        let content[2] = t2;
        let content[3] = t3;

        let content[4] = t4;
        let content[5] = t5;
        let content[6] = t6;
        let content[7] = t7;

        let content[8] = t8;
        let content[9] = t9;
        let content[10] = t10;
        let content[11] = t11;

        let answers = Array.new(3);
        let answers[0] = a0;
        let answers[1] = a1;
        let answers[2] = a2;

        let registers = Array.new(3);
        let registers[0] = r0;
        let registers[1] = r1;
        let registers[2] = r2;

        return;
    }

    method boolean checkAnswer(String buff13, String buff14) {
        if (queries = 1) { return Helpers.strComp(buff13, a0); }
        else { return Helpers.strComp(buff13, a0) & Helpers.strComp(buff14, a1); }
    }

    method void dispose() {

        do lineIndex.dispose();

        //** Dispose all Strings *//
        do t0.dispose();
        do t1.dispose();
        do t2.dispose();
        do t3.dispose();
        do t4.dispose();
        do t5.dispose();
        do t6.dispose();
        do t7.dispose();
        do t8.dispose();
        do t9.dispose();
        do t10.dispose();
        do t11.dispose();

        do a0.dispose();
        do a1.dispose();
        do a2.dispose();

        do r0.dispose();
        do r1.dispose();
        do r2.dispose();

        //** Dispose Array *//
        do content.dispose();
        do answers.dispose();
        do registers.dispose();

        //** Dispose Object *//
        do Memory.deAlloc(this);
        return;
    }

    //** NODES *//

    constructor ChallengeNode makeNode0() {

        let nodeIndex = 0;
        let currentRow = 0;
        let numLines = 0;
        let queries = 0;


        let t0 = "";
        let t1 = "";
        let t2 = "";
        let t3 = "";
        let t4 = "";
        let t5 = "";
        let t6 = "";
        let t7 = "";
        let t8 = "";
        let t9 = "";
        let t10 = "";
        let t11 = "";

        let a0 = "";
        let a1 = "";
        let a2 = "";

        let r0 = "";
        let r1 = "";
        let r2 = "";

        do assignContentToArr();

        return this;
    }

    constructor ChallengeNode makeNode1() {

        let nodeIndex = 1;
        let numLines = 4;
        let queries = 1;

        let t0 = "@42";
        let t1 = "D=A";
        let t2 = "@555";
        let t3 = "M=D";
        let t4 = "";
        let t5 = "";
        let t6 = "";
        let t7 = "";
        let t8 = "";
        let t9 = "";
        let t10 = "";
        let t11 = "";

        let a0 = "42";
        let a1 = "";
        let a2 = "";

        let r0 = "RAM[555]=";
        let r1 = "";
        let r2 = "";

        do assignContentToArr();

        return this;
    }

    constructor ChallengeNode makeNode2() {

        let nodeIndex = 2;
        let numLines = 5;
        let queries = 2;

        let t0 = "@SHIMON";
        let t1 = "D=M+A";
        let t2 = "@40";
        let t3 = "A=D-A";
        let t4 = "M=D-1";
        let t5 = "";
        let t6 = "";
        let t7 = "";
        let t8 = "";
        let t9 = "";
        let t10 = "";
        let t11 = "";
        
        let a0 = "596";
        let a1 = "42";
        let a2 = "";

        let r0 = "RAM[557]=";
        let r1 = "RAM[555]=";
        let r2 = "";

        do assignContentToArr();

        return this;
    }

    constructor ChallengeNode makeNode31() {

        let nodeIndex = 31;
        let numLines = 4;
        let queries = 1;

        let t0 = "@357";
        let t1 = "D=M";
        let t2 = "@666";
        let t3 = "M=M+D";
        let t4 = "";
        let t5 = "";
        let t6 = "";
        let t7 = "";
        let t8 = "";
        let t9 = "";
        let t10 = "";
        let t11 = "";
        
        let a0 = "999";
        let a1 = "";
        let a2 = "";

        let r0 = "RAM[666]=";
        let r1 = "";
        let r2 = "";

        do assignContentToArr();

        return this;
    }

    constructor ChallengeNode makeNode32() {
        
        let nodeIndex = 32;
        let numLines = 8;
        let queries = 2;

        let t0 = "@5";
        let t1 = "D=M+A";
        let t2 = "A=D-A";
        let t3 = "D=D+1";
        let t4 = "A=D-M-A";
        let t5 = "D=A+M+D";
        let t6 = "@357";
        let t7 = "M=D";
        let t8 = "";
        let t9 = "";
        let t10 = "";
        let t11 = "";
        
        let a0 = "5";
        let a1 = "7";
        let a2 = "3";

        let r0 = "RAM[5]=";
        let r1 = "RAM[7]=";
        let r2 = "RAM[3]=";

        do assignContentToArr();

        return this;
    }


}
