class QuestManager {
    static int activeQuest, activeSubQuest;
    static boolean hasQuestStarted;
    static Array pendingNPCs;
    
    function void init() {
        let activeQuest = 0;
        let activeSubQuest = 0;
        let hasQuestStarted = false;

        do QuestManager.initPendingNPCs();

        do NPC.setPending(pendingNPCs[activeQuest]);

        do Dialogue.makeNode(activeQuest);
        
        return;
    }
    
    function void initPendingNPCs() {
        let pendingNPCs = Array.new(30);
        
        let pendingNPCs[0] = 0;  // Shimon
        let pendingNPCs[1] = 0;  // Shimon
        let pendingNPCs[2] = 0;  // Shimon
        let pendingNPCs[3] = 1;  // Gini

        return;
    }
    // pendingNPC | questNumber  (0[SHIMON] | 0[quest])
    // pendingNPC | questNumber  (0[SHIMON] | 1[quest])
    // pendingNPC | questNumber  (1[GINI]   | 2[quest])
    // pendingNPC | questNumber  (0[SHIMON] | 3[quest])

    function boolean getHasStarted() {
        return hasQuestStarted;
    }

    function void setHasStarted(boolean cond) {
        let hasQuestStarted = cond;
        return;
    }

    function int getActive() {
        return activeQuest;
        // e.g. can later be checked by the characters themselves
        // if 0:
            // Shimon's intro quest
        // if 2:
            // Gini's quest
        // etc.

        // or essentially, if not 2, gini isn't pending
        // or if not 2.1 (maybe there are sub-stages to a quest)
        // so more then just 1 int conditional
    }
    
    function int getActiveSubQuest() {
        return activeSubQuest;
    }

    function void increment() {
        let activeQuest = activeQuest + 1;
        do NPC.setPending(pendingNPCs[activeQuest]);
        do Dialogue.makeNode(activeQuest);
        return;
    }

    function void inActiveSubQuest() {
        let activeSubQuest = activeSubQuest + 1;
        return;
    }

}
