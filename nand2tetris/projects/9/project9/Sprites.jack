class Sprites {

//** Sprite Selection Map:
// 0 == Shimon | 1 == Gini | 2 == ? | 3 == ? | *//
static int currentSelSprite;

static int shimonBigCoord, giniBigCoord;
static int questionMarkCoord1, questionMarkCoord2, questionMarkCoord3;
static int shimonSmallCoord, giniSmallCoord;

function void init() {
	
	let currentSelSprite = 0;
	
	// let shimonSmallCoord = 6333;
	let shimonSmallCoord = 7165;
	let giniSmallCoord = 5148;

	// let shimonBigCoord = 1899;
	let shimonBigCoord = 1739;
	let giniBigCoord = 1482;

	let questionMarkCoord1 = 5341;
	let questionMarkCoord2 = 3485;
	let questionMarkCoord3 = 1501;
	return;
}

function void setCurrentSprite(int sel) {
	let currentSelSprite = sel;
	return;
}

function int getCurrentSprite() {
	return currentSelSprite;
}

function void drawCurrentSelSprite(boolean isFlipped) {
	var int activeCharacter;
	let activeCharacter = Character.getActive();

	if (activeCharacter = 0) { do Sprites.drawSpriteShimon(~isFlipped); return; }
	if (activeCharacter = 1) { do Sprites.drawSpriteGini(~isFlipped); return; }
	return;
}


//** Viewport is at x1=134, y1=46, x2=354, y2=174 
//   We're essentially offesting by 1 pixel to not override the frame itself. */
function void clearViewport() {

	do Screen.setColor(false);
	do Screen.drawRectangle(135, 47, 353, 173);
	do Screen.setColor(true);

	return;
}


// Draw Shimon Big & Small
function void drawSpriteShimon(boolean isFlipped) {
	if (isFlipped) { do SpriteShimon.drawShimonBig(shimonBigCoord); }
	else { do SpriteShimon.drawShimonBigFlipped(shimonBigCoord); }
	return;
}

function void drawSpriteShimonSmall() {
	do SpriteShimon.drawShimonSmall(shimonSmallCoord);
	return;
}


// Draw Gini Big & Small
function void drawSpriteGini(boolean isFlipped) {
	if (isFlipped) { do SpriteGini.drawGiniBig(giniBigCoord); }
	else { do SpriteGini.drawGiniBigFlipped(giniBigCoord); }
	return;
}

function void drawSpriteGiniSmall() {
	do SpriteGini.drawGiniSmall(giniSmallCoord);
	return;
}

// Draw Question Mark
function void drawQuestionMark1() {
	do SpriteQuestionMark.drawQuestionMark(questionMarkCoord1);
	return;
}

// Draw Question Mark
function void drawQuestionMark2() {
	do SpriteQuestionMark.drawQuestionMark(questionMarkCoord2);
	return;
}

// Draw Question Mark
function void drawQuestionMark3() {
	do SpriteQuestionMark.drawQuestionMark(questionMarkCoord3);
	return;
}

}
