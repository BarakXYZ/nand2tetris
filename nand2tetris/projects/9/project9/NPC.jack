class NPC {
    
    field Array npc;
    field String name, role;
    field int inM, npcIndex;

    static int numOfNPCs;
    static int activeNPC;  // Perhaps needs to be tracked through game?
    static int pendingNPC;
    
    function void init() {
        let numOfNPCs = 0;
        let activeNPC = 0;
        return;
    }

    constructor NPC initShimon() {
        let activeNPC = 0;

        let npc = Array.new(5);

        let npc[0] = 5;                   // Array size
        let npc[1] = "@SHIMON";           // Name
        let npc[2] = 555;                 // inM
        let npc[3] = "Master of Memory";  // Role
        let npc[4] = 1;                   // Stage (Story Line)
        // let character[5] = pointerToCurrentDialog?
        // Essentially a pointer to a dialog object that contains the dialog to
        // print with an array[0] size so we can loop over it?

        let name = "@SHIMON";
        let role = "Master of Memory";
        let inM = 555;
        let npcIndex = 1;

        let numOfNPCs = numOfNPCs + 1;  // needs to be init somewhere
        return this;
    }

    constructor NPC initGini() {
        let name = "@GINI";
        let role = "BFF";
        let inM = 4;
        let npcIndex = 2;

        return this;
    }
    
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
    
    function void interact() {
        
        if (pendingNPC = activeNPC) {
            do Dialogue.draw();
        }
        else {
            // default dialogue of this NPC at this point
        }

        // Possibily enter a loop and also be responsibile for drawing sprite?
        // do Dialogue.speak(npcIndex);
        return;
    }

    method int getStage() {
        return npc[4];
    }

    method void incStage() {
        let npc[4] = npc[4] + 1;  // increment stage by 1
        return;
    }

    // What the character asks itself upon interaction?
        // Which stage is the player in the total storyline?
            // Depending on the stage:
                // Have I already spoke with the player regarding his current quest?
                    // No:
                        // Unfold the quest dialogue to the player
                        // Mark already spoke to character as true
                    // Yes:
                        // Say the default text until quest is done
                        // do nothing


    // method bool isPending() {
    // }

    function void setPendingNPC(int index) {
        let pendingNPC = index;
        return;
    }

    function int getActive() {
        return activeNPC;
    }

    function void setActive(int index) {
        let activeNPC = index;
        // 0 == Shimon
        // 1 == Gini
        // 2 == ...
        return;
    }
}
