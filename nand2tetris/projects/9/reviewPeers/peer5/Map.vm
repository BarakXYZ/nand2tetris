function Map.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 2
call Math.multiply 2
pop this 0
push argument 0
pop this 1
push constant 0
pop this 2
push pointer 0
call Map.initMapData 1
pop temp 0
push pointer 0
return
function Map.initMapData 1
push argument 0
pop pointer 0
push this 0
push constant 2
call Math.multiply 2
call Array.new 1
pop this 3
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push constant 2
call Math.multiply 2
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.set 5
push argument 0
pop pointer 0
push this 2
push this 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push pointer 0
push argument 1
call Map.hashStr 2
pop local 0
push constant 0
not
pop local 4
label WHILE_EXP0
push local 4
not
if-goto WHILE_END0
push local 0
push constant 2
call Math.multiply 2
push this 3
add
pop pointer 1
push that 0
pop local 3
push local 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 4
goto IF_END1
label IF_FALSE1
push local 3
push argument 1
call StringTools.isEq 2
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop local 4
goto IF_END2
label IF_FALSE2
push local 0
push constant 1
add
pop local 0
push constant 0
not
pop local 4
label IF_END2
label IF_END1
goto WHILE_EXP0
label WHILE_END0
push argument 1
call String.length 1
call String.new 1
pop local 2
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push argument 1
call String.length 1
lt
not
if-goto WHILE_END1
push local 2
push argument 1
push local 1
call String.charAt 2
call String.appendChar 2
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 2
call Math.multiply 2
push this 3
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 2
call Math.multiply 2
push constant 1
add
push this 3
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 1
add
pop this 2
push constant 0
not
return
function Map.get 3
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Map.hashStr 2
pop local 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push local 0
push constant 2
call Math.multiply 2
push this 3
add
pop pointer 1
push that 0
pop local 2
push local 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 2
push argument 1
call StringTools.isEq 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 2
call Math.multiply 2
push constant 1
add
push this 3
add
pop pointer 1
push that 0
return
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.delete 4
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Map.hashStr 2
pop local 0
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push local 0
push constant 2
call Math.multiply 2
push this 3
add
pop pointer 1
push that 0
pop local 3
push local 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 3
push argument 1
call StringTools.isEq 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push constant 1
sub
pop this 2
push local 0
push constant 2
call Math.multiply 2
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
return
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Map.hashStr 3
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push argument 1
call String.length 1
lt
not
if-goto WHILE_END0
push argument 1
push local 1
call String.charAt 2
pop local 0
push local 2
push constant 32
call Math.multiply 2
push local 2
sub
push local 0
add
push constant 0
or
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 2
push this 0
call Math.divide 2
pop local 0
push local 2
push local 0
push this 0
call Math.multiply 2
sub
pop local 2
push local 2
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
neg
return
label IF_FALSE0
push local 2
return
