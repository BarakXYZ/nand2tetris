function Arrange.new 5
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 0
push argument 0
call Math.multiply 2
pop local 0
push local 0
call Array.new 1
pop this 2
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push local 0
lt
not
if-goto WHILE_END0
push local 1
push this 2
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 3
push this 0
push constant 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 1
push constant 2
call Arrange.swap 3
pop temp 0
label IF_FALSE0
push this 0
push constant 4
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 1
push constant 2
call Arrange.swap 3
pop temp 0
label IF_FALSE1
push this 0
push constant 6
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push constant 1
push constant 2
call Arrange.swap 3
pop temp 0
label IF_FALSE2
push constant 0
pop this 1
push constant 0
pop this 4
push pointer 0
return
function Arrange.getIsFinished 0
push argument 0
pop pointer 0
push this 4
return
function Arrange.getMoves 0
push argument 0
pop pointer 0
push this 1
return
function Arrange.init 4
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push constant 0
pop local 3
push pointer 0
push local 2
call Arrange.drawRow 2
pop temp 0
push local 2
push constant 512
add
pop local 2
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 2
call Arrange.drawBlock 1
pop temp 0
push local 2
push constant 1
add
pop local 2
label WHILE_EXP1
push local 1
push this 0
lt
not
if-goto WHILE_END1
push pointer 0
push local 2
push local 3
push this 2
add
pop pointer 1
push that 0
call Arrange.drawNum 3
pop temp 0
push local 2
push constant 2
add
call Arrange.drawBlock 1
pop temp 0
push local 3
push constant 1
add
pop local 3
push local 1
push constant 1
add
pop local 1
push local 2
push constant 3
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
push constant 0
pop local 1
push local 0
push constant 1024
call Math.multiply 2
pop local 2
push pointer 0
push local 2
call Arrange.drawRow 2
pop temp 0
push local 2
push constant 512
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Arrange.swap 1
push argument 0
pop pointer 0
push argument 1
push this 2
add
pop pointer 1
push that 0
pop local 0
push argument 1
push this 2
add
push argument 2
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 2
push this 2
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Arrange.getLoc 3
push argument 0
pop pointer 0
push argument 1
push this 0
call Math.divide 2
pop local 0
push argument 1
push local 0
push this 0
call Math.multiply 2
sub
pop local 1
push local 0
push constant 1024
call Math.multiply 2
pop local 0
push local 0
push constant 512
add
pop local 0
push local 1
push constant 3
call Math.multiply 2
pop local 1
push local 1
push constant 1
add
pop local 1
push local 0
push local 1
add
pop local 2
push local 2
return
function Arrange.checkFinished 3
push argument 0
pop pointer 0
push this 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push this 0
call Math.multiply 2
pop local 0
push local 0
push constant 1
sub
pop local 0
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 4
push constant 0
return
label IF_FALSE1
push constant 0
pop local 1
push constant 1
pop local 2
label WHILE_EXP0
push local 1
push local 0
lt
not
if-goto WHILE_END0
push local 1
push this 2
add
pop pointer 1
push that 0
push local 2
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 4
push constant 0
return
label IF_FALSE2
push local 1
push constant 1
add
pop local 1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
pop this 4
push constant 0
return
function Arrange.moveUp 3
push argument 0
pop pointer 0
push this 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 3
push this 0
sub
pop local 0
push local 0
push constant 0
lt
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 3
push local 0
call Arrange.swap 3
pop temp 0
push pointer 0
push this 3
call Arrange.getLoc 2
pop local 1
push pointer 0
push local 0
call Arrange.getLoc 2
pop local 2
push pointer 0
push local 1
push this 3
push this 2
add
pop pointer 1
push that 0
call Arrange.drawNum 3
pop temp 0
push pointer 0
push local 2
push local 0
push this 2
add
pop pointer 1
push that 0
call Arrange.drawNum 3
pop temp 0
push local 0
pop this 3
push this 1
push constant 1
add
pop this 1
label IF_FALSE1
push constant 0
return
function Arrange.moveDown 4
push argument 0
pop pointer 0
push this 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push this 0
call Math.multiply 2
pop local 0
push local 0
push constant 1
sub
pop local 0
push this 3
push this 0
add
pop local 1
push local 1
push local 0
gt
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 3
push local 1
call Arrange.swap 3
pop temp 0
push pointer 0
push this 3
call Arrange.getLoc 2
pop local 2
push pointer 0
push local 1
call Arrange.getLoc 2
pop local 3
push pointer 0
push local 2
push this 3
push this 2
add
pop pointer 1
push that 0
call Arrange.drawNum 3
pop temp 0
push pointer 0
push local 3
push local 1
push this 2
add
pop pointer 1
push that 0
call Arrange.drawNum 3
pop temp 0
push local 1
pop this 3
push this 1
push constant 1
add
pop this 1
push pointer 0
call Arrange.checkFinished 1
pop temp 0
label IF_FALSE1
push constant 0
return
function Arrange.moveLeft 4
push argument 0
pop pointer 0
push this 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 3
push constant 1
sub
pop local 1
push this 3
push this 0
call Math.divide 2
pop local 0
push this 3
push local 0
push this 0
call Math.multiply 2
sub
pop local 0
push local 0
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 3
push local 1
call Arrange.swap 3
pop temp 0
push pointer 0
push this 3
call Arrange.getLoc 2
pop local 2
push pointer 0
push local 1
call Arrange.getLoc 2
pop local 3
push pointer 0
push local 2
push this 3
push this 2
add
pop pointer 1
push that 0
call Arrange.drawNum 3
pop temp 0
push pointer 0
push local 3
push local 1
push this 2
add
pop pointer 1
push that 0
call Arrange.drawNum 3
pop temp 0
push local 1
pop this 3
push this 1
push constant 1
add
pop this 1
label IF_FALSE1
push constant 0
return
function Arrange.moveRight 4
push argument 0
pop pointer 0
push this 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 3
push constant 1
add
pop local 1
push local 1
push this 0
call Math.divide 2
pop local 0
push local 1
push local 0
push this 0
call Math.multiply 2
sub
pop local 0
push local 0
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push this 3
push local 1
call Arrange.swap 3
pop temp 0
push pointer 0
push this 3
call Arrange.getLoc 2
pop local 2
push pointer 0
push local 1
call Arrange.getLoc 2
pop local 3
push pointer 0
push local 2
push this 3
push this 2
add
pop pointer 1
push that 0
call Arrange.drawNum 3
pop temp 0
push pointer 0
push local 3
push local 1
push this 2
add
pop pointer 1
push that 0
call Arrange.drawNum 3
pop temp 0
push local 1
pop this 3
push this 1
push constant 1
add
pop this 1
push pointer 0
call Arrange.checkFinished 1
pop temp 0
label IF_FALSE1
push constant 0
return
function Arrange.drawNum 1
push argument 0
pop pointer 0
push argument 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Arrange.clearBlock 1
pop temp 0
push argument 1
push constant 1
add
call Arrange.clearBlock 1
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 2
push constant 9
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 2
push constant 10
call Math.divide 2
pop local 0
push argument 1
push local 0
call Arrange.drawDigit 2
pop temp 0
push argument 2
push constant 10
push local 0
call Math.multiply 2
sub
pop argument 2
label IF_FALSE1
push argument 1
push constant 1
add
push argument 2
call Arrange.drawDigit 2
pop temp 0
push constant 0
return
function Arrange.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Arrange.drawDigit 0
push argument 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
call Arrange.drawZero 1
pop temp 0
label IF_FALSE0
push argument 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
call Arrange.drawOne 1
pop temp 0
label IF_FALSE1
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
call Arrange.drawTwo 1
pop temp 0
label IF_FALSE2
push argument 1
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
call Arrange.drawThree 1
pop temp 0
label IF_FALSE3
push argument 1
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 0
call Arrange.drawFour 1
pop temp 0
label IF_FALSE4
push argument 1
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push argument 0
call Arrange.drawFive 1
pop temp 0
label IF_FALSE5
push argument 1
push constant 6
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push argument 0
call Arrange.drawSix 1
pop temp 0
label IF_FALSE6
push argument 1
push constant 7
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push argument 0
call Arrange.drawSeven 1
pop temp 0
label IF_FALSE7
push argument 1
push constant 8
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push argument 0
call Arrange.drawEight 1
pop temp 0
label IF_FALSE8
push argument 1
push constant 9
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push argument 0
call Arrange.drawNine 1
pop temp 0
label IF_FALSE9
push constant 0
return
function Arrange.drawBlock 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.clearBlock 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.drawRow 2
push argument 0
pop pointer 0
push constant 3
push this 0
call Math.multiply 2
push constant 1
add
pop local 0
push argument 1
pop local 1
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push local 1
call Arrange.drawBlock 1
pop temp 0
push local 0
push constant 1
sub
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Arrange.drawZero 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 3696
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 3696
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.drawOne 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 448
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 480
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 416
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.drawTwo 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 3072
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 1536
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 768
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 192
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 96
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 48
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.drawThree 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 3168
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 3072
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 3072
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 1920
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 1920
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 3072
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 3072
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 3168
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.drawFour 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 1536
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 1792
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 1920
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 1728
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 1632
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 1584
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 1560
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 1536
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 1536
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 1536
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.drawFive 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 48
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 48
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 48
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 8160
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 6144
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 6144
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 6192
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 2032
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.drawSix 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 48
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 48
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 48
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 432
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 1008
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 1648
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 3696
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.drawSeven 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 2032
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 4080
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 6144
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 6144
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 3072
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 1536
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 768
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 192
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 96
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 48
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 16
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.drawEight 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 3696
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 1632
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 3696
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 3696
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Arrange.drawNine 1
push constant 16384
push argument 0
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 3696
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 3120
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 3696
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 4064
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 3520
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 3072
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 3072
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 3168
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 2016
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 960
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
