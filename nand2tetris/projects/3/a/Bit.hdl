// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/Bit.hdl
/**
 * 1-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value:
 * if (load(t)) out(t+1) = in(t), else out(t+1) = out(t)
 */
CHIP Bit {
    IN in, load;
    OUT out;

    // Implemented by BarakXYZ 2024
    PARTS:
    Mux(a=lastIn, b=in, sel=load, out=muxOut);
    DFF(in=muxOut, out=lastIn, out=out);
}

/*
The crux here was to realize that really in the first cycle the behavior is undefined, therefore, we can bind DFF (which operators in t-1) to the Mux in an interesting, yet confusing way.
If the load is asserted, we will read-in the new input value, else, will keep feeding the old input.
Looking at the compare file, notice that in the first few runs, the output is 0, and we really start testing from the second round onwards.
*/
